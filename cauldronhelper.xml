<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- MuClient version 5.07-pre -->

<!-- Plugin "CauldronHelper" generated by Plugin Wizard -->

<muclient>
<plugin
   name="CauldronHelper"
   author="Kelaire"
   id="95b6c502c1ae17401e57e8b0"
   language="Lua"
   purpose="Assist in Witch's Cauldron"
   date_written="2023-10-31 19:06:12"
   requires="5.07"
   version="1.0"
   >

<description trim="n">
<![CDATA[
.----------------------------------------------------------------------------.
|                         Witch's Cauldron Helper                            |
|----------------------------------------------------------------------------|
|                                                                            |
|  wch help - shows this helpfile!                                           |
|  wch check - Check your invetory for ingredients                           |
|  wch display - Shows what you got!                                         |
|  wch create - creates a potion with the proper spells                      |
|                                                                            |
'----------------------------------------------------------------------------'
]]>
</description>


</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>

  <trigger
   enabled="y"
   match="{kelingred}"
   regexp="n"
   script="startCapture"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  
  <trigger
   enabled="y"
   match="{/kelingred}"
   regexp="n"
   script="endCapture"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  
  <trigger
   enabled="n"
   group="cauldronhelper"
   match=".*"
   regexp="y"
   keep_evaluating="y"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  
  <trigger
   enabled="n"
   group="cauldronhelper"
   match="^(\(\s*(?<numIngred>\d+)\)\s*|\s+)(\(K\)|\s+)?(\(M\)|\s+)?(\(G\)|\s+)?(\(H\)|\s+)?\s+\*\!\[\s(?<ingredientName>[A-Za-z\s']+)\s\]\!\*.*$"
   regexp="y"
   script="checkInput"
   keep_evaluating="y"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>


</triggers>

<!--  Aliases  -->

<aliases>
	<alias script="checkIngredients" match="^wch check$" enabled="y" regexp="y" sequence="100" ignore_case="y"></alias>
	<alias script="displayIngredients" match="^wch display$" enabled="y" regexp="y" sequence="100" ignore_case="y"></alias>
	<alias script="createPotion" match="^wch create$" enabled="y" regexp="y" sequence="100" ignore_case="y"></alias>
	<alias script="ShowHelp" match="^wch( help)?$" enabled="y" regexp="y" sequence="100" ignore_case="y"></alias>
</aliases>


<script>

<![CDATA[

require "serialize"
require "wait"

-- Set our globals
ingredList = {}
spellList = {}

-- When you install this show the help file!
function OnPluginInstall()
  ShowHelp()
end

-- Start the capture of the inventory output
function startCapture(name, line, args)
	ColourNote("red","","[CauldronHelper]: ","#33ccff","","Searching Inventory...")
	
	EnableTriggerGroup ("cauldronhelper", true)
	
	-- Clear the table.
	ingredList = {}
	spellList = {}
end

-- End the capture of the inventory output
function endCapture(name, line, args)
	EnableTriggerGroup ("cauldronhelper", false)
	
	ColourNote("red","","[CauldronHelper]: ","#33ccff","","Searching complete...use wch display to see what was found!")
end

-- Check inventory input to see what we have
function checkInput(name, line, args)
	if args.numIngred == "" or args.numIngred == nil then
	  numIngred = 1
	else
	  numIngred = args.numIngred
	end
	
	ingredName = args.ingredientName
	
	if numIngred == 1 then
	  table.insert(ingredList,ingredName)
	else
	  for i = 1, 1, numIngred do
	    table.insert(ingredList,ingredName)
	  end
	end
end

-- Check inventory for ingredients
function checkIngredients(name, line, args)
	SendNoEcho("echo {kelingred}")
	SendNoEcho("inv")
	SendNoEcho("echo {/kelingred}")
end

-- Display the ingredient list
function displayIngredients(name, line, args)
  if table.getn(ingredList) > 5 or table.getn(ingredList) < 3 then
    ColourNote("red","","[CauldronHelper]: You have too many or too few ingredients!")
    ColourNote("red","","[CauldronHelper]: Number of ingredients: " .. table.getn(ingredList))
  else
    ColourNote("red","","[CauldronHelper]: ","#33ccff","","Number of ingredients: " .. table.getn(ingredList))
    for k,v in pairs(ingredList) do
      ColourNote("red","","[CauldronHelper]: ","#0066cc","",v)
	  theSpell = getSpell(v)
    end
	ColourNote("red","","[CauldronHelper]: ","#33ccff","","Spell Listing")
	for k,v in pairs(spellList) do
	  ColourNote("red","","[CauldronHelper]: ","#0066cc","",v)
	end
  end
end

-- Show Help File
function ShowHelp(name, line, args)
  ColourNote("orange", "black", GetPluginInfo (GetPluginID (), 3))
end

-- Get the spell!
function getSpell(itemName)
  local spellTable = {
     ["A Thick Hide"]                  = "armor",
	 ["Lavender Oil"]                = "bless",
	 ["Bottled Weasel Bile"]         = "frenzy",
	 ["Eye of Cyclops"]              = "giant strength",
	 ["A Sprite's Wings"]              = "haste",
	 ["A Ghost's Wail in a Jar"]       = "invis",
	 ["A Magic Mushroom"]              = "pass door",
	 ["Coffin Nails"]                = "protection evil",
	 ["A Mossy Nest"] 				 = "sanctuary",
	 ["Dragon Scale Dust"]           = "shield",
	 ["An Armadillo's Shell"]           = "stone skin",
	 ["Essence of Hummingbird Oil"]  = "adrenaline control",
	 ["A Snip of Centaur's Tail"]      = "enhanced strength",
	 ["A Dash of Powdered Sulphur"]    = "invis",
	 ["Absinthe Honey"]              = "thought shield",
	 ["Tree Toad Oil"]               = "barkskin",
	 ["Bat's Blood Ink"]             = "darkness",
	 ["A Pinch of Powdered Rust"]      = "champions strength",
	 ["A Pouch of Star Dust"]          = "holy aura",
	 ["A Vial of Nightmares"]          = "avoidance",
	 ["A Crystal Ball"]                = "grey aura",
	 ["A Flask of Dragon's Tears"]     = "true seeing",
	 ["A Handful of Leeches"]          = "vaccinate",
	 ["A Fragment of Lodestone"]       = "shockproof",
	 ["A Lantern of Fireflies"]        = "warmth",
	 ["Vampire Fangs"]               = "toxic resistance",
	 ["An Angel's Charm"] 		     = "holy mirror",
	 ["Dried Black Fungi"]           = "invis",
	 ["Black Moon Rose Petals"]      = "black lotus",
	 ["Kobold Stew"]                 = "sustenance",
	 ["Sea Monster Tentacles"]       = "underwater breathing",
	 ["Nail of Troll"]               = "flesh armor",
	 ["Four Leaf Clover"]            = "aid",
	 ["A Magical Mirror"]              = "blur",
	 ["Lizard Skin"]                 = "flesh armor",
	 ["An Energy Orb"]                  = "energy containment",
	 ["A MindFlayer's Brain Stem"]     = "intellect fortress",
	 ["Unicorn Blood"]               = "heal",
	 ["Purple Blossom"]              = "black lotus",
	 ["A Floral Arrangement"]          = "refresh"
  }
  table.insert(spellList,spellTable[itemName])
  if spellTable[itemName] == nil then
    Print("Error with spell " .. itemName)
  end
  return spellTable[itemName]
end

function createPotion(name,line,args)

end


]]>

</script>

</muclient>
